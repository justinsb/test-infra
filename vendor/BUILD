package(default_visibility = ["//visibility:public"])

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/bitbucket.org/ww/goautoneg:all-srcs",
        "//vendor/cloud.google.com/go/compute/metadata:all-srcs",
        "//vendor/cloud.google.com/go/internal:all-srcs",
        "//vendor/cloud.google.com/go/pubsub:all-srcs",
        "//vendor/github.com/NYTimes/gziphandler:all-srcs",
        "//vendor/github.com/Sirupsen/logrus:all-srcs",
        "//vendor/github.com/arbovm/levenshtein:all-srcs",
        "//vendor/github.com/beorn7/perks/quantile:all-srcs",
        "//vendor/github.com/bwmarrin/snowflake:all-srcs",
        "//vendor/github.com/ghodss/yaml:all-srcs",
        "//vendor/github.com/go-sql-driver/mysql:all-srcs",
        "//vendor/github.com/golang/glog:all-srcs",
        "//vendor/github.com/golang/lint:all-srcs",
        "//vendor/github.com/golang/mock/gomock:all-srcs",
        "//vendor/github.com/golang/protobuf/proto:all-srcs",
        "//vendor/github.com/google/btree:all-srcs",
        "//vendor/github.com/google/go-github/github:all-srcs",
        "//vendor/github.com/google/go-querystring/query:all-srcs",
        "//vendor/github.com/google/gofuzz:all-srcs",
        "//vendor/github.com/gregjones/httpcache:all-srcs",
        "//vendor/github.com/inconshreveable/mousetrap:all-srcs",
        "//vendor/github.com/influxdata/influxdb/client/v2:all-srcs",
        "//vendor/github.com/influxdata/influxdb/models:all-srcs",
        "//vendor/github.com/influxdata/influxdb/pkg/escape:all-srcs",
        "//vendor/github.com/jinzhu/gorm:all-srcs",
        "//vendor/github.com/jinzhu/inflection:all-srcs",
        "//vendor/github.com/mattn/go-sqlite3:all-srcs",
        "//vendor/github.com/matttproud/golang_protobuf_extensions/pbutil:all-srcs",
        "//vendor/github.com/peterbourgon/diskv:all-srcs",
        "//vendor/github.com/prometheus/client_golang/prometheus:all-srcs",
        "//vendor/github.com/prometheus/client_model/go:all-srcs",
        "//vendor/github.com/prometheus/common/expfmt:all-srcs",
        "//vendor/github.com/prometheus/common/model:all-srcs",
        "//vendor/github.com/prometheus/procfs:all-srcs",
        "//vendor/github.com/satori/go.uuid:all-srcs",
        "//vendor/github.com/shurcooL/githubql:all-srcs",
        "//vendor/github.com/shurcooL/go/ctxhttp:all-srcs",
        "//vendor/github.com/shurcooL/graphql:all-srcs",
        "//vendor/github.com/spf13/cobra:all-srcs",
        "//vendor/github.com/spf13/pflag:all-srcs",
        "//vendor/golang.org/x/crypto/curve25519:all-srcs",
        "//vendor/golang.org/x/crypto/ed25519:all-srcs",
        "//vendor/golang.org/x/crypto/ssh:all-srcs",
        "//vendor/golang.org/x/net/context:all-srcs",
        "//vendor/golang.org/x/net/http2:all-srcs",
        "//vendor/golang.org/x/net/idna:all-srcs",
        "//vendor/golang.org/x/net/internal/timeseries:all-srcs",
        "//vendor/golang.org/x/net/lex/httplex:all-srcs",
        "//vendor/golang.org/x/net/trace:all-srcs",
        "//vendor/golang.org/x/oauth2:all-srcs",
        "//vendor/golang.org/x/sys/unix:all-srcs",
        "//vendor/golang.org/x/tools/go/gcexportdata:all-srcs",
        "//vendor/golang.org/x/tools/go/gcimporter15:all-srcs",
        "//vendor/google.golang.org/api/gensupport:all-srcs",
        "//vendor/google.golang.org/api/googleapi:all-srcs",
        "//vendor/google.golang.org/api/internal:all-srcs",
        "//vendor/google.golang.org/api/iterator:all-srcs",
        "//vendor/google.golang.org/api/option:all-srcs",
        "//vendor/google.golang.org/api/pubsub/v1:all-srcs",
        "//vendor/google.golang.org/api/transport:all-srcs",
        "//vendor/google.golang.org/appengine:all-srcs",
        "//vendor/google.golang.org/grpc:all-srcs",
        "//vendor/gopkg.in/yaml.v2:all-srcs",
        "//vendor/k8s.io/contrib/test-utils/utils:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/util/clock:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/util/errors:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/util/flag:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/util/sets:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/util/yaml:all-srcs",
    ],
    tags = ["automanaged"],
)
